version: "3.7"

services:
  proxy:
    container_name: tgbotnginx
    image: nginx:latest
    volumes:
      - $NGINX_CONF_PATH
      - $NGINX_CERT_PATH
    ports:
      - mode: host
        protocol: tcp
        published: $NGINX_HTTP
        target: $NGINX_HTTP
      - mode: host
        protocol: tcp
        published: $NGINX_HTTPS
        target: $NGINX_HTTPS
    networks:
      - tgbot
    restart: always

  api:
    image: cr.myzdrikov.ru/mybot:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ConnectionStrings:PostgresDb=User ID=$POSTGRES_LOGIN;
          Password=$POSTGRES_PASSWORD;Host=tgbotdb;Port=$POSTGRES_DEFAULTPORT;Database=$POSTGRES_DBNAME;Pooling=true
      - ASPNETCORE_URLS=http://+:$MAIN_PORT
    ports:
      - mode: host
        protocol: tcp
        published: $MAIN_PORT
        target: $MAIN_PORT
    networks:
      - tgbot
    depends_on:
      - db
    restart: always

  db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_LOGIN
      - POSTGRES_DB=$POSTGRES_DBNAME
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    ports:
      - mode: host
        protocol: tcp
        published: $POSTGRES_DEFAULTPORT
        target: $POSTGRES_DEFAULTPORT
    networks:
      - tgbot
    restart: always

  #logs:
  #  image: amir20/dozzle:v4.6.3
  #  environment:
  #    - DOZZLE_USERNAME=$DOZZLE_USERNAME
  #    - DOZZLE_PASSWORD=$DOZZLE_PASSWORD
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  networks:
  #    - tgbot
  #  ports:
  #   - mode: host
  #      protocol: tcp
  #      published: $DOZZLE_PUBLISHED_PORT
  #      target: $DOZZLE_TARGET_PORT

networks:
  tgbot:
    name: tgbot
    driver: bridge

volumes:
  pgdata:
    driver: local
  pgconf:
    driver: local
  pglog:
    driver: local